USE [KPI_App]
GO

/****** Object:  StoredProcedure [dbo].[Rpt_PackingSlipSp]    Script Date: 09/06/2017 11:23:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/* $Header: /ApplicationDB/Stored Procedures/Rpt_PackingSlipSp.sp 45    12/20/13 3:07a Mding2 $  */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2008 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
***************************************************************
*/
-- converted from co/co22-r.p


/* $Archive: /ApplicationDB/Stored Procedures/Rpt_PackingSlipSp.sp $
 *
 * SL9.00 45 171385 Mding2 Fri Dec 20 03:07:34 2013
 * Germany Country Pack - Report layout changes
 * Issue 171385 - Re-write logic for using Alternate Address Report Formatting.
 * replace with FormatAddressWithContactSp
 *
 * SL9.00 44 171385 Mding2 Tue Dec 17 00:51:17 2013
 * Germany Country Pack - Report layout changes
 * Issue 171385 - Re-write logic for using Alternate Address Report Formatting.
 *
 * SL8.04 43 162919 jzhou Thu Jul 04 04:29:23 2013
 * Code of how to get the value of overview seems not consistent in some sps
 * Issue 162919:
 * Format the codes.
 *
 * SL8.04 42 162919 jzhou Wed Jul 03 04:58:32 2013
 * Issue 162919:
 * To make the codes in SPs which get the value of overview from the item_lang.overview be consistent.
 *
 * SL8.04 41 157496 Mzhang4 Fri Jan 18 00:40:22 2013
 * When print the report PostProjectRetentionReport, come across error.
 * 157496-Change cust_po data type from nvarchar(22)  to nvarchar(25) .
 *
 * SL8.04 40 RS4615 Lpeng Fri Dec 28 01:17:10 2012
 * RS4615:Add a new parameter
 *
 * SL8.04 39 RS5200 Cliu Tue Aug 21 05:03:02 2012
 * RS5200
 * 1. Add a new parameter "@PrintItemOverview".
 * 2. Add a new output field "item_overview" which is got from item_lang.item_overview or item.item_overview.
 *
 * SL8.03 38 146452 Mewing Mon Apr 16 17:39:16 2012
 * RS5397 Auto Create PO-CO Across Sites
 *
 * SL8.03 36 146898 Ddeng Fri Mar 09 10:32:54 2012
 * Serial numbers repeated on blanket order packing slip
 * Issue 146898: Added co_num, co_line, and co_release as Join conditions for matltrack in case of getting other release's serial number.
 *
 * SL8.03 35 143028 Jgao1 Sun Oct 09 22:57:49 2011
 * Report generated by the Packing Slip form shows no data for Customer Orders with Non Inventory Items.
 * 143028: Replace 'INNER JOIN item' by 'LEFT JOIN item', because non-inventory is not in table 'item'
 *
 * SL8.03 34 137258 Cajones Tue Aug 09 08:42:31 2011
 * Serial Number is missing when Packing Slip Report fails to print
 * Issue 137258
 * - Removed @Matltrack table
 * - Removed the definition and use of the serialCrs and MatltrackCrs cursors. Replaced with a single select since the matltrack.track_link is being populated by CreateCoPckItemSp.
 * - Removed matltrack update
 * - Removed coitem update
 *
 * SL8.03 33 RS5123 Cajones Wed Mar 23 10:21:54 2011
 * RS5123 - Added code to retrieve multi-lingual translations for the Ship Via Description and Item Description
 *
 * SL8.03 32 RS3639 chuang2 Tue Mar 08 05:42:42 2011
 * RS3639 If item is non-inventory do not throw an error, get description from the coitem table.
 *
 * SL8.03 31 135675 pgross Wed Jan 12 15:21:47 2011
 * Reprint Packing Slips not printing serial numbers
 * link Serial records to the packing slip regardless of the report option
 *
 * SL8.02 30 rs4588 Dahn Thu Mar 04 16:31:48 2010
 * rs4588 copyright header changes.
 *
 * SL8.01 29 118795 pgross Thu Apr 02 13:17:05 2009
 * Packing Slip, Pre Ship Packing Selection gives no warning on the report when Customer is on Credit Hold
 * expanded credit hold checking
 *
 * SL8.01 28 117805 pgross Mon Feb 23 11:29:43 2009
 * Print Planning Item materials not work on Packing Slip report
 * generate output for Feature Strings
 *
 * SL8.01 27 116102 Cajones Mon Dec 29 15:34:49 2008
 * Packing Slip, Pre Ship Packing Selection gives no warning when Customer is on Credit Hold
 * ISSUE:116102,APAR:113910
 * Added custaddr to rpt select.
 * Also changed select code for the report credit hold field to look at both the co.credit_hold and the custaddr.credit_hold field when determining what to return.
 *
 * SL8.01 26 114700 Clarsco Tue Oct 21 10:25:49 2008
 * Item Kit Components is not printed on Packing Slip when CO type is blanket 
 * Fixed Bug 114700
 * For Blankets, reference co_bln.print_kit_components.
 *
 * SL8.01 25 rs3953 Vlitmano Tue Aug 26 19:02:33 2008
 * RS3953 - Changed a Copyright header?
 *
 * SL8.01 24 rs3953 Vlitmano Mon Aug 18 15:38:58 2008
 * Changed a Copyright header information(RS3959)
 *
 * SL8.01 23 108427 rbathula Fri Mar 28 06:41:42 2008
 * Packing Slip Report does not show correct partial Qty picked for Kitting materials
 * Solving Issue: 108427
 * Pass @QtyPacked to GetKitItemBOMSP
 *
 * SL8.01 22 107330 pgross Mon Mar 24 10:59:05 2008
 * Packing Slip causing locking\Blocking with serial numbered items.
 * made changes to improve performance
 *
 * SL8.00 21 106078 nmannam Mon Dec 03 05:12:17 2007
 * Serial Numbers printing out of sequence
 * 106465 -To the ResultSet,  serial_num is added to the Ordered By to sort the Serialnumbers.
 *
 * SL8.00 20 105432 Hcl-ngovila Wed Sep 12 05:45:21 2007
 * Qty Ordered and Qty To Pack fields are blank on the report.
 * Issue 105432
 * Set the values of @PlacesQtyUnit and @QtyUnitFormat
 *
 * SL8.00 19 100972 Hcl-tayamoh Thu Apr 12 05:24:29 2007
 * Quantity shipped is truncated to 2 decimal place instead of displaying the actual unit shipped on the CO line
 * Issue 100972
 * Qty shipped and Qty Packed will we displayed as per inventory parameters.
 * added formula QtyOrderedConvWithFormat and QtyPackedConvWithFormat
 *
 * SL8.00 18 RS2968 nkaleel Fri Feb 23 05:00:22 2007
 * changing copyright information(RS2968)
 *
 * SL8.00 17 RS1164 ajith.nair Mon Jul 17 08:20:10 2006
 * RS1164
 * Replaced 'PhantomItemSp' with new generalized Sp 'GetKitItemBOMSP'
 * for getting Kit Item components.
 *
 * SL8.00 16 RS2968 prahaladarao.hs Wed Jul 12 01:48:33 2006
 * RS 2968, Name change CopyRight Update.
 *
 * SL8.00 15 RS1164 ajith.nair Thu Jul 06 05:45:33 2006
 * RS1164
 * As per the internal review comment, 
 * (1) Corrected the indentation of the code 
 * (2) Inserted 'dbo.' for sp calls
 * (3) Removed the where clause from the '#Component' table create      statement
 *
 * SL8.00 14 RS1164 ajith.nair Wed Jun 28 01:54:55 2006
 * RS1164
 * (1) New cursor [KitComponentCrs] has been implemented for fetching the Kit components comes under the Kit item in the Sp.
 * (2) Added new fields [Print_Kit_Components, Kit_Component, Kit_Component_Desc, Kit_Qty_Required, Kit_u_m, Kit_Flag] in the existing report set table @ReportSet 
 * (3) Created new temporary table #Component for keeping the Kit components against the Kit Item
 *
 * SL7.05 13 91818 NThurn Fri Jan 06 17:57:47 2006
 * Inserted standard External Touch Point call.  (RS3177)
 *
 * SL7.04 12 85343 Grosphi Tue Feb 01 16:25:12 2005
 * allow for 55 characters in displayed feature string
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE [dbo].[Rpt_PackingSlipSp] (
  @PckCall                    NVARCHAR(20)    = NULL -- CO-SHIP or PRE-SHIP
, @MinPackNum                 PackNumType     = NULL
, @MaxPackNum                 PackNumType     = NULL
, @PrintOrderText             ListYesNoType   = NULL
, @PrintLineText              ListYesNoType   = NULL
, @PrintDescription           ListYesNoType   = NULL
, @PrintPlanningItemMaterials ListYesNoType   = NULL
, @IncludeSerialNumbers       ListYesNoType   = NULL
, @ShowInternal               FlagNyType      = NULL
, @ShowExternal               FlagNyType      = NULL
, @PrintItemOverview          FlagNyType      = NULL
, @DisplayHeader              FlagNyType      = NULL
, @CoTypeRegular              FlagNyType      = NULL
, @CoTypeBlanket              FlagNyType      = NULL
, @CoStat                     NCHAR(200)      = NULL
, @CoItemStat                 NCHAR(200)      = NULL
, @OrderStarting              CoNumType       = NULL
, @OrderEnding                CoNumType       = NULL
, @OrderLineStarting          GenericIntType  = NULL
, @OrderReleaseStarting       GenericIntType  = NULL
, @OrderLineEnding            GenericIntType  = NULL
, @OrderReleaseEnding         GenericIntType  = NULL
, @CustomerStarting           CustNumType     = NULL
, @CustomerEnding             CustNumType     = NULL
, @OrderDateStarting          DateType        = NULL
, @OrderDateEnding            DateType        = NULL
, @DueDateStarting            DateType        = NULL
, @DueDateEnding              DateType        = NULL
, @pSite                      SiteType        = NULL
) AS

if @PckCall is null set @PckCall = 'CO-SHIP'
if @PrintOrderText is null set @PrintOrderText = 0
if @PrintLineText is null set @PrintLineText = 0
if @PrintDescription is null set @PrintDescription = 0
if @PrintPlanningItemMaterials is null set @PrintPlanningItemMaterials = 0
if @IncludeSerialNumbers is null set @IncludeSerialNumbers = 0
if @ShowInternal is null set @ShowInternal = 0
if @ShowExternal is null set @ShowExternal = 0
if @PrintItemOverview is null set @PrintItemOverview = 0
if @DisplayHeader is null set @DisplayHeader = 0
if @CoTypeRegular is null set @CoTypeRegular = 1
if @CoTypeBlanket is null set @CoTypeBlanket = 1
if @CoStat is null set @CoStat = 'POSC'
if @CoItemStat is null set @CoItemStat = 'POFC'

--  Crystal reports has the habit of setting the isolation level to dirty
-- read, so we'll correct that for this routine now.  Transaction management
-- is also not being provided by Crystal, so a transaction is started here.
BEGIN TRANSACTION
SET XACT_ABORT ON
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
-- A session context is created so session variables can be used.
DECLARE
  @RptSessionID RowPointerType

EXEC dbo.InitSessionContextSp
  @ContextName = 'Rpt_PackingSlipSp'
, @SessionID   = @RptSessionID OUTPUT
, @Site        = @pSite

DECLARE
  @Severity             INT
, @UserParmSite         SiteType
, @Item                 ItemType
, @OfficeAddr           LongAddress
, @OfficePhone          PhoneType
, @OfficeContact        ContactType
, @PackNum              PackNumType
, @CoNum                CoNumType
, @CustNum              CustNumType
, @Weight               WeightType
, @QtyPackages          PackagesType
, @PackDate             DateType
, @ShipCode             ShipCodeType
, @DropNum              CustNumType
, @DropSeq              DropSeqType
, @Whse                 WhseType
, @CoContact            ContactType
, @CoLcrNum             LcrNumType
, @CoCustPo             CustPoType
, @CoType               CoTypeType
, @CoOrderDate          DateType
, @BillToContact        ContactType
, @BillAddr             LongAddress
, @ShipToContact        ContactType
, @ShipAddr             LongAddress
, @ShipcodeDescription  DescriptionType
, @TCreditHold          ListYesNoType
, @CreditHoldMessage    InfobarType
, @CoLine               CoLineType
, @CoRelease            CoReleaseType
, @UM                   UMType
, @QtyOrdered           QtyUnitType
, @QtyPacked            QtyUnitType
, @QtyPackedConv        QtyUnitType
, @CoitemRowPointer     RowPointerType
, @QtyOrderedConv       QtyUnitType
, @CoitemCustItem       CustItemType
, @CoitemFeatStr        FeatStrType
, @FeatureDisplayQty    QtyPerType
, @FeatureDisplayUM     UMType
, @FeatureDisplayDesc   DescriptionType
, @FeatureDisplayStr    FeatStrType
, @CastCoRelease        nvarchar(5)
, @CastDropSeq          nvarchar(20)
, @ItemSerialTracked    ListYesNoType
, @ItemDescription      DescriptionType
, @ItemOverview         ProductOverviewType
, @MatltrackTrackNum    MatlTransNumType
, @TPackQty             QtyUnitType
, @CoRowPointer         RowPointerType
, @CoNoteFlag           FlagNyType
, @CoBlnRowPointer      RowPointerType
, @CoBlnNoteFlag        FlagNyType
, @CoitemNoteFlag       FlagNyType
, @CoitemShipSite       SiteType
, @Today                DateType
, @InvparmsPlacesQtyCum DecimalPlacesType
, @FirstRelease         CoReleaseType
, @MinSeq               int
, @CoItemPrintKitComps  FlagNyType
, @KitItem              ItemType
, @Component            ItemType
, @CompDesc             DescriptionType
, @CompQtyRequired      QtyUnitType
, @CompUM               UMType

DECLARE
  @QtyUnitFormat nvarchar(60)
, @PlacesQtyUnit tinyint

DECLARE @reportset TABLE (
  pack_num              int
, pack_date             datetime
, whse                  nvarchar(4)
, co_num                nvarchar(10)
, cust_num              nvarchar(7)
, weight                decimal(9,2)
, qty_packages          int
, ship_code             nvarchar(4)
, ship_code_desc        nvarchar(40)
, drop_num              nvarchar(10)
, drop_seq              int
, cast_drop_seq         nvarchar(20)
, office_addr           nvarchar(1000)
, office_contact        nvarchar(30)
, office_phone          nvarchar(25)
, ship_contact          nvarchar(30)
, ship_addr             nvarchar(1000)
, bill_contact          nvarchar(30)
, bill_addr             nvarchar(1000)
, contact               nvarchar(30)
, lcr_num               nvarchar(20)
, credit_hold           int
, cust_po               nvarchar(25)
, co_line               int
, co_release            int
, cast_co_release       nvarchar(5)
, item                  nvarchar(30)
, item_desc             nvarchar(40)
, item_overview         nvarchar(100)
, serial_num            nvarchar(30)
, u_m                   nvarchar(3)
, qty_ordered           decimal(19, 8)
, qty_packed            decimal(19, 8)
, qty_ordered_conv      decimal(19, 8)
, qty_packed_conv       decimal(19, 8)
, cust_item             nvarchar(30)
, feat_str              nvarchar(40)
, co_note_flag          int
, co_rowpointer         uniqueidentifier
, coitem_note_flag      int
, coitem_rowpointer     uniqueidentifier
, co_bln_note_flag      int
, co_bln_rowpointer     uniqueidentifier
, JobrouteJob           nvarchar(20)
, JobrouteSuffix        nvarchar(4)
, JobrouteOperNum       nvarchar(4)
, FeatureDisplayQty     decimal(19, 8)
, FeatureDisplayUM      nvarchar(3)
, FeatureDisplayDesc    nvarchar(40)
, FeatureDisplayStr     nvarchar(55)
, Print_Kit_Components  tinyint
, Kit_Component         nvarchar(60)
, Kit_Component_Desc    nvarchar(80)
, Kit_Qty_Required      decimal(19, 8)
, Kit_u_m               nvarchar(5) 
, Kit_Flag              tinyint
, qty_unit_format       nvarchar(60)
, places_qty_unit       tinyint
, ship_site             nvarchar(10)
)

declare @Features table (
  JobrouteJob nvarchar(20)
, JobrouteSuffix int
, JobrouteOperNum int
, FeatureDisplayQty decimal(25,8)
, FeatureDisplayUM nvarchar(10)
, FeatureDisplayDesc nvarchar(60)
, FeatureDisplayStr nvarchar(60)
, CoitemAllRowPointer uniqueidentifier
, seq int identity
)

---SETS
SET @Severity               = 0
SET @MinPackNum             = ISNULL(@MinPackNum, dbo.LowInt())
SET @MaxPackNum             = ISNULL(@MaxPackNum, dbo.HighInt())
SET @OrderStarting          = CASE WHEN @OrderStarting IS NULL THEN dbo.LowCharacter()
                              ELSE dbo.ExpandKyByType('CoNumType',@OrderStarting) END
SET @OrderEnding            = CASE WHEN @OrderEnding   IS NULL THEN dbo.HighCharacter()
                              ELSE dbo.ExpandKyByType('CoNumType',@OrderEnding)   END
SET @OrderLineStarting      = ISNULL(@OrderLineStarting, dbo.LowInt())
SET @OrderLineEnding        = ISNULL(@OrderLineEnding, dbo.HighInt())
SET @OrderReleaseStarting   = ISNULL(@OrderReleaseStarting, dbo.LowInt())
SET @OrderReleaseEnding     = ISNULL(@OrderReleaseEnding, dbo.HighInt())

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_Rpt_PackingSlipSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_Rpt_PackingSlipSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      EXEC @EXTGEN_SpName
           @PckCall
         , @MinPackNum
         , @MaxPackNum
         , @PrintOrderText
         , @PrintLineText
         , @PrintDescription
         , @PrintPlanningItemMaterials
         , @IncludeSerialNumbers
         , @ShowInternal
         , @ShowExternal
         , @PrintItemOverview
         , @DisplayHeader
         , @CoTypeRegular
         , @CoTypeBlanket
         , @CoStat
         , @CoItemStat
         , @OrderStarting
         , @OrderEnding
         , @OrderLineStarting
         , @OrderReleaseStarting
         , @OrderLineEnding
         , @OrderReleaseEnding
         , @CustomerStarting
         , @CustomerEnding
         , @OrderDateStarting
         , @OrderDateEnding
         , @DueDateStarting
         , @DueDateEnding
         , @pSite
 
      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION
      EXEC dbo.CloseSessionContextSp @SessionID = @RptSessionID
      -- ETP routine must take over all desired functionality of this standard routine:
      RETURN
   END
   -- End of Generic External Touch Point code.
 
SET @CoBlnNoteFlag  = 0
SET @CoNoteFlag     = 0
SET @CoitemNoteFlag = 0
SET @FeatureDisplayQty  = NULL
SET @FeatureDisplayUM   = NULL
SET @FeatureDisplayDesc = NULL
SET @FeatureDisplayStr  = NULL
SET @Today = dbo.GetSiteDate(getdate())

-- Selecting the user site for reporting only the site specific information.
SELECT
   @UserParmSite = parms.site
   , @OfficePhone  = parms.phone
FROM parms
WHERE parms.parm_key = 0

SELECT 
   @InvparmsPlacesQtyCum = invparms.places_qty_cum
, @PlacesQtyUnit = places_qty_unit
, @QtyUnitFormat = qty_unit_format
FROM invparms
 
SET @QtyUnitFormat = dbo.FixMaskForCrystal( @QtyUnitFormat, dbo.GetWinRegDecGroup() )    

INSERT INTO @ReportSet (
   pack_num, pack_date, whse, co_num, cust_num, weight, qty_packages
   , ship_code, ship_code_desc, drop_num, drop_seq, cast_drop_seq
   , office_addr, office_contact, office_phone, ship_contact, ship_addr
   , bill_contact, bill_addr, contact
   , lcr_num, credit_hold, cust_po, co_line, co_release, cast_co_release
   , item, item_desc, item_overview, serial_num
   , u_m, qty_ordered, qty_packed, qty_ordered_conv, qty_packed_conv
   , cust_item, feat_str
   , co_note_flag, co_rowpointer, coitem_note_flag, coitem_rowpointer
   , co_bln_note_flag, co_bln_rowpointer
   , JobrouteJob, JobrouteSuffix, JobrouteOperNum, FeatureDisplayQty
   , FeatureDisplayUM, FeatureDisplayDesc, FeatureDisplayStr,Print_Kit_Components
   , qty_unit_format, places_qty_unit
   , ship_site
)
SELECT
   pck_hdr.pack_num
   , isnull(pck_hdr.pack_date, @Today)
   , pck_hdr.whse
   , pck_hdr.co_num
   , pck_hdr.cust_num
   , pck_hdr.weight
   , pck_hdr.qty_packages
   , pck_hdr.ship_code
   , CASE WHEN ship_lang.rowpointer IS NOT NULL
          THEN ship_lang.description 
        ELSE shipcode.description
     END   
   , pck_hdr.drop_num
   , pck_hdr.drop_seq
   , CASE WHEN pck_hdr.cust_num = pck_hdr.drop_num
      THEN '(' + convert(NVARCHAR(10), pck_hdr.drop_seq) + ')'
      ELSE pck_hdr.drop_num + ' (' + convert(NVARCHAR(10), pck_hdr.drop_seq) + ')'
      END
   , left(case when pck_hdr.whse is not null then dbo.WhseaddrSp(pck_hdr.whse, @UserParmSite, whse.contact) else null end, 1000)
   , whse.contact
   , whse.phone
   , shipto.contact##2
   , left(CASE WHEN pck_hdr.drop_num IS NOT NULL
      THEN dbo.FormatAddressWithContactSp(pck_hdr.drop_num, pck_hdr.drop_seq, shipto.contact##2)
      ELSE NULL
      END, 1000)
   , billto.contact##3
   , left(CASE WHEN pck_hdr.cust_num IS NOT NULL
      THEN dbo.FormatAddressWithContactSp(pck_hdr.cust_num, 0, billto.contact##3)
      ELSE NULL
      END, 1000)
   , co.contact
   , co.lcr_num
   , co.credit_hold
   , co.cust_po
   , pckitem.co_line
   , pckitem.co_release
   , case when coitem.co_release = 0 then null else '-' + CAST (coitem.co_release AS NVARCHAR(4)) end
   , pckitem.item
   , case when item_lang.rowpointer IS NOT NULL
          then item_lang.description 
          else case when @PrintDescription = 1 
                    then isnull(coitem.description, ISNULL(item.description, coitem.description)) 
                    else ISNULL(item.description, coitem.description) 
               end
     end   
-- , case when @PrintDescription = 1 then isnull(coitem.description, ISNULL(item.description, coitem.description)) else ISNULL(item.description, coitem.description) end
   , CASE WHEN @PrintItemOverview = 1
          THEN ISNULL(LEFT(item_lang.overview, 100), LEFT(item.overview, 100))
          ELSE NULL
     END
   , null -- serial number
   , coitem.u_m
   , pckitem.qty_ordered
   , pckitem.qty_packed
   , coitem.qty_ordered_conv
   , case when coitem.u_m = item.u_m then pckitem.qty_packed
          when item.u_m is null then pckitem.qty_packed
      else dbo.UomConvQty(pckitem.qty_packed, dbo.Getumcf (coitem.u_m, pckitem.item, pck_hdr.cust_num, 'C'), 'From Base')
      end
   , coitem.cust_item
   , coitem.feat_str
   , case when @PrintOrderText = 1
      then dbo.ReportNotesExist('co', co.RowPointer, @ShowInternal, @ShowExternal, co.NoteExistsFlag)
      else 0 end
   , case when @PrintOrderText = 1 then co.RowPointer else null end
   , case when @PrintLineText = 1
      then dbo.ReportNotesExist('coitem', coitem.RowPointer, @ShowInternal, @ShowExternal, coitem.NoteExistsFlag)
      else 0 end
   , coitem.RowPointer
   , 0 -- CO Blanket Line Note Flag
   , null -- CO Blanket Line RowPointer
   , null -- job
   , null -- suffix
   , null -- oper num
   , null -- feature display qty
   , null -- feature display u/m
   , null -- feature display description
   , null -- feature display string
   , case when co.type = 'R' then coitem.print_kit_components else co_bln.print_kit_components end
   , @QtyUnitFormat , @PlacesQtyUnit
   , coitem.ship_site
FROM pck_hdr
   INNER JOIN co ON
      co.co_num = pck_hdr.co_num
   INNER join customer as billto on
      billto.cust_num = pck_hdr.cust_num
      and billto.cust_seq = 0
   INNER join custaddr on
      custaddr.cust_num = pck_hdr.cust_num
      AND custaddr.cust_seq = 0
   INNER join customer as shipto on
      shipto.cust_num = pck_hdr.drop_num
      and shipto.cust_seq = pck_hdr.drop_seq
   LEFT outer join whse on
      whse.whse = pck_hdr.whse
   LEFT outer join shipcode on
      shipcode.ship_code = pck_hdr.ship_code
   INNER join pckitem on
      pckitem.pack_num = pck_hdr.pack_num
      AND pckitem.co_num = pck_hdr.co_num
   INNER JOIN coitem ON
      pckitem.co_num = coitem.co_num
      AND pckitem.co_line = coitem.co_line
      AND pckitem.co_release = coitem.co_release
   LEFT outer join co_bln on
      co_bln.co_num = pckitem.co_num
      and co_bln.co_line = pckitem.co_line
   LEFT join item on
      item.item = pckitem.item
   LEFT OUTER JOIN ship_lang on 
      ship_lang.ship_code = shipcode.ship_code 
      AND ship_lang.lang_code = billto.lang_code          
   LEFT OUTER JOIN item_lang on 
      item_lang.item = pckitem.item
      AND item_lang.lang_code = billto.lang_code      
      
WHERE pck_hdr.pack_num >= @MinPackNum
   AND   pck_hdr.pack_num <= @MaxPackNum
   AND   co.demanding_site_po_num IS NULL



INSERT INTO @ReportSet (
   pack_num, pack_date, whse, co_num, cust_num, weight, qty_packages
   , ship_code, ship_code_desc, drop_num, drop_seq, cast_drop_seq
   , office_addr, office_contact, office_phone, ship_contact, ship_addr
   , bill_contact, bill_addr, contact
   , lcr_num, credit_hold, cust_po, co_line, co_release, cast_co_release
   , item, item_desc, item_overview, serial_num
   , u_m, qty_ordered, qty_packed, qty_ordered_conv, qty_packed_conv
   , cust_item, feat_str
   , co_note_flag, co_rowpointer, coitem_note_flag, coitem_rowpointer
   , co_bln_note_flag, co_bln_rowpointer
   , JobrouteJob, JobrouteSuffix, JobrouteOperNum, FeatureDisplayQty
   , FeatureDisplayUM, FeatureDisplayDesc, FeatureDisplayStr,Print_Kit_Components
   , qty_unit_format, places_qty_unit
   , ship_site
)
SELECT
   pck_hdr.pack_num
   , isnull(pck_hdr.pack_date, @Today)
   , pck_hdr.whse
   , pck_hdr.co_num
   , pck_hdr.cust_num
   , pck_hdr.weight
   , pck_hdr.qty_packages
   , pck_hdr.ship_code
   , CASE WHEN ship_lang.rowpointer IS NOT NULL
          THEN ship_lang.description 
        ELSE shipcode.description
     END   
   , pck_hdr.drop_num
   , pck_hdr.drop_seq
   , CASE WHEN pck_hdr.cust_num = pck_hdr.drop_num
      THEN '(' + convert(NVARCHAR(10), pck_hdr.drop_seq) + ')'
      ELSE pck_hdr.drop_num + ' (' + convert(NVARCHAR(10), pck_hdr.drop_seq) + ')'
      END
   , left(case when pck_hdr.whse is not null then dbo.WhseaddrSp(pck_hdr.whse, @UserParmSite, whse.contact) else null end, 1000)
   , whse.contact
   , whse.phone
   , shipto.contact##2
   , left(CASE WHEN pck_hdr.drop_num IS NOT NULL
      THEN dbo.FormatAddressWithContactSp(pck_hdr.drop_num, pck_hdr.drop_seq, shipto.contact##2)
      ELSE NULL
      END, 1000)
   , billto.contact##3
   , left(CASE WHEN pck_hdr.cust_num IS NOT NULL
      THEN dbo.FormatAddressWithContactSp(pck_hdr.cust_num, 0, billto.contact##3)
      ELSE NULL
      END, 1000)
   , co.contact
   , co.lcr_num
   , co.credit_hold
   , co.cust_po
   , pckitem.co_line
   , pckitem.co_release
   , case when coitem.co_release = 0 then null else '-' + CAST (coitem.co_release AS NVARCHAR(4)) end
   , pckitem.item
   , case when item_lang.rowpointer IS NOT NULL
          then item_lang.description 
          else case when @PrintDescription = 1 
                    then isnull(coitem.description, ISNULL(item.description, coitem.description)) 
                    else ISNULL(item.description, coitem.description) 
               end
     end   
--   , case when @PrintDescription = 1 then isnull(coitem.description, ISNULL(item.description, coitem.description)) else ISNULL(item.description, coitem.description) end
   , CASE WHEN @PrintItemOverview = 1
          THEN ISNULL(LEFT(item_lang.overview, 100), LEFT(item.overview, 100))
          ELSE NULL
     END
   , null -- serial number
   , coitem.u_m
   , pckitem.qty_ordered
   , pckitem.qty_packed
   , coitem.qty_ordered_conv
   , case when coitem.u_m = item.u_m then pckitem.qty_packed
          when item.u_m is null then pckitem.qty_packed
      else dbo.UomConvQty(pckitem.qty_packed, dbo.Getumcf (coitem.u_m, pckitem.item, pck_hdr.cust_num, 'C'), 'From Base')
      end
   , coitem.cust_item
   , coitem.feat_str
   , case when @PrintOrderText = 1
      then dbo.ReportNotesExist('co', co.RowPointer, @ShowInternal, @ShowExternal, co.NoteExistsFlag)
      else 0 end
   , case when @PrintOrderText = 1 then co.RowPointer else null end
   , case when @PrintLineText = 1
      then dbo.ReportNotesExist('coitem', coitem.RowPointer, @ShowInternal, @ShowExternal, coitem.NoteExistsFlag)
      else 0 end
   , coitem.RowPointer
   , 0 -- CO Blanket Line Note Flag
   , null -- CO Blanket Line RowPointer
   , null -- job
   , null -- suffix
   , null -- oper num
   , null -- feature display qty
   , null -- feature display u/m
   , null -- feature display description
   , null -- feature display string
   , case when co.type = 'R' then coitem.print_kit_components else co_bln.print_kit_components end
   , @QtyUnitFormat , @PlacesQtyUnit
   , coitem.ship_site
FROM pck_hdr
   INNER JOIN co ON
      co.co_num = pck_hdr.co_num
   INNER join customer as billto on
      billto.cust_num = pck_hdr.cust_num
      and billto.cust_seq = 0
   INNER join custaddr on
      custaddr.cust_num = pck_hdr.cust_num
      AND custaddr.cust_seq = 0
   INNER join customer_all as shipto on
      shipto.cust_num = pck_hdr.drop_num
      and shipto.cust_seq = pck_hdr.drop_seq
      and co.demanding_site = shipto.site_ref
   LEFT outer join whse on
      whse.whse = pck_hdr.whse
   LEFT outer join shipcode on
      shipcode.ship_code = pck_hdr.ship_code
   INNER join pckitem on
      pckitem.pack_num = pck_hdr.pack_num
      AND pckitem.co_num = pck_hdr.co_num
   INNER JOIN coitem ON
      pckitem.co_num = coitem.co_num
      AND pckitem.co_line = coitem.co_line
      AND pckitem.co_release = coitem.co_release
   LEFT outer join co_bln on
      co_bln.co_num = pckitem.co_num
      and co_bln.co_line = pckitem.co_line
   LEFT join item on
      item.item = pckitem.item
   LEFT OUTER JOIN ship_lang on 
      ship_lang.ship_code = shipcode.ship_code 
      AND ship_lang.lang_code = billto.lang_code          
   LEFT OUTER JOIN item_lang on 
      item_lang.item = pckitem.item
      AND item_lang.lang_code = billto.lang_code      
      
WHERE pck_hdr.pack_num >= @MinPackNum
   AND   pck_hdr.pack_num <= @MaxPackNum
   AND   co.demanding_site_po_num IS NOT NULL
   
declare credit_holdCrs cursor local static for
select distinct cust_num
from @ReportSet
where credit_hold = 0

open credit_holdCrs

while 1=1
begin
   fetch credit_holdCrs into
     @CustNum
   if @@fetch_status != 0
      break

   set @CreditHoldMessage = null
   exec dbo.ChkcredSp
     @CustNum = @CustNum
   , @CredHold = @CreditHoldMessage OUTPUT

   if @CreditHoldMessage is not null
      update @ReportSet
      set credit_hold = 1
      where cust_num = @CustNum
      and credit_hold = 0
end
close credit_holdCrs
deallocate credit_holdCrs

IF @PrintLineText = 1
   UPDATE @ReportSet
      SET co_bln_rowpointer = co_bln.RowPointer
      , co_bln_note_flag = dbo.ReportNotesExist('co_bln', co_bln.RowPointer, @ShowInternal, @ShowExternal, co_bln.NoteExistsFlag)
   FROM @ReportSet as rs
   INNER join co_bln on
      co_bln.co_num = rs.co_num
      and co_bln.co_line = rs.co_line
   INNER join coitem on
      coitem.co_num = co_bln.co_num
      AND coitem.co_line = co_bln.co_line
      AND coitem.co_release = (select top 1 co_release from coitem
   WHERE coitem.co_num = co_bln.co_num and coitem.co_line = co_bln.co_line
   ORDER BY coitem.co_release)

IF @PckCall = 'CO-SHIP' AND @IncludeSerialNumbers = 1
BEGIN
   INSERT INTO @ReportSet (
      pack_num, pack_date, whse, co_num, cust_num, weight, qty_packages
      , ship_code, ship_code_desc, drop_num, drop_seq, cast_drop_seq
      , office_addr, office_contact, office_phone, ship_contact, ship_addr
      , bill_contact, bill_addr, contact
      , lcr_num, credit_hold, cust_po, co_line, co_release, cast_co_release
      , item, item_desc, item_overview, serial_num
      , u_m, qty_ordered, qty_packed, qty_ordered_conv, qty_packed_conv
      , cust_item, feat_str
      , co_note_flag, co_rowpointer, coitem_note_flag, coitem_rowpointer
      , co_bln_note_flag, co_bln_rowpointer
      , qty_unit_format, places_qty_unit 
      )
   SELECT
      pack_num, pack_date, rs.whse, co_num, rs.cust_num, weight, qty_packages
      , ship_code, ship_code_desc, drop_num, drop_seq, cast_drop_seq
      , office_addr, office_contact, office_phone, ship_contact, ship_addr
      , bill_contact, bill_addr, contact
      , lcr_num, credit_hold, cust_po, co_line, co_release, cast_co_release
      , rs.item, item_desc, item_overview, serial.ser_num
      , rs.u_m, qty_ordered, qty_packed, qty_ordered_conv, qty_packed_conv
      , cust_item, rs.feat_str
      , co_note_flag, co_rowpointer, coitem_note_flag, coitem_rowpointer
      , co_bln_note_flag, co_bln_rowpointer
      , qty_unit_format, places_qty_unit 
   FROM @ReportSet AS rs
   LEFT JOIN item ON item.item = rs.item and item.serial_tracked = 1
   INNER JOIN matltrack ON matltrack.track_link = rs.pack_num
         AND matltrack.ref_num = rs.co_num
         AND matltrack.ref_line_suf = rs.co_line
         AND matltrack.ref_release = rs.co_release
   INNER JOIN serial ON serial.stat = 'O' AND serial.item = rs.item
   INNER JOIN ser_track ON ser_track.ser_num = serial.ser_num 
                  AND ser_track.track_num = matltrack.track_num
END
-- PRINT FBOM STUFF
IF @PrintPlanningItemMaterials = 1
BEGIN
   DECLARE featCrs CURSOR LOCAL STATIC FOR
   SELECT
      pack_num, pack_date, whse, co_num, cust_num, weight, qty_packages
      , ship_code, ship_code_desc, drop_num, drop_seq, cast_drop_seq
      , office_addr, office_contact, office_phone, ship_contact, ship_addr
      , bill_contact, bill_addr, contact
      , lcr_num, credit_hold, cust_po, co_line, co_release, cast_co_release
      , item, item_desc, item_overview
      , u_m, qty_ordered, qty_packed, qty_ordered_conv, qty_packed_conv
      , cust_item, feat_str
      , co_note_flag, co_rowpointer, coitem_note_flag, coitem_rowpointer
      , co_bln_note_flag, co_bln_rowpointer
      , ship_site
   FROM @ReportSet as rs
   WHERE feat_str is not null
   
   OPEN featCrs
   
   WHILE 1 = 1
   BEGIN
      FETCH featCrs INTO
         @PackNum, @PackDate, @Whse, @CoNum, @CustNum, @Weight, @QtyPackages
         , @ShipCode, @ShipcodeDescription, @DropNum, @DropSeq, @CastDropSeq
         , @OfficeAddr, @OfficeContact, @OfficePhone, @ShipToContact, @ShipAddr
         , @BillToContact, @BillAddr, @CoContact
         , @CoLcrNum, @TCreditHold, @CoCustPo, @CoLine, @CoRelease, @CastCoRelease
         , @Item, @ItemDescription, @ItemOverview
         , @UM, @QtyOrdered, @QtyPacked, @QtyOrderedConv, @QtyPackedConv
         , @CoitemCustItem, @CoitemFeatStr
         , @CoNoteFlag, @CoRowPointer, @CoitemNoteFlag, @CoitemRowPointer
         , @CoBlnNoteFlag, @CoBlnRowPointer
         , @CoitemShipSite
      
      IF @@fetch_status != 0
         BREAK

      delete @Features
      insert into @Features
      select * from dbo.CoDConfig (
        @CoNum
      , @CoLine
      , @CoRelease
      , @Item
      , @CoitemShipSite
      , @CoOrderDate
      , @CoitemFeatStr)

      select @MinSeq = min(seq) from @Features
      if @MinSeq is null
         set @MinSeq = 0
      update @Features
      set FeatureDisplayStr = null
      where seq != @MinSeq

      INSERT INTO @ReportSet (
         pack_num, pack_date, whse, co_num, cust_num, weight, qty_packages
         , ship_code, ship_code_desc, drop_num, drop_seq, cast_drop_seq
         , office_addr, office_contact, office_phone, ship_contact, ship_addr
         , bill_contact, bill_addr, contact
         , lcr_num, credit_hold, cust_po, co_line, co_release, cast_co_release
         , item, item_desc, item_overview, serial_num
         , u_m, qty_ordered, qty_packed, qty_ordered_conv, qty_packed_conv
         , cust_item, feat_str
         , co_note_flag, co_rowpointer, coitem_note_flag, coitem_rowpointer
         , co_bln_note_flag, co_bln_rowpointer
         , JobrouteJob, JobrouteSuffix, JobrouteOperNum, FeatureDisplayQty
         , FeatureDisplayUM, FeatureDisplayDesc, FeatureDisplayStr
         , qty_unit_format, places_qty_unit 
          )
      SELECT
         @PackNum, @PackDate, @Whse, @CoNum, @CustNum, @Weight, @QtyPackages
         , @ShipCode, @ShipcodeDescription, @DropNum, @DropSeq, @CastDropSeq
         , @OfficeAddr, @OfficeContact, @OfficePhone, @ShipToContact, @ShipAddr
         , @BillToContact, @BillAddr, @CoContact
         , @CoLcrNum, @TCreditHold, @CoCustPo, @CoLine, @CoRelease, @CastCoRelease
         , @Item, @ItemDescription, @ItemOverview, null
         , @UM, @QtyOrdered, @QtyPacked, @QtyOrderedConv, @QtyPackedConv
         , @CoitemCustItem, @CoitemFeatStr
         , @CoNoteFlag, @CoRowPointer, @CoitemNoteFlag, @CoitemRowPointer
         , @CoBlnNoteFlag, @CoBlnRowPointer
         , dconfig.JobRouteJob, dconfig.JobrouteSuffix, dconfig.JobrouteOperNum
         , dconfig.FeatureDisplayQty, dconfig.FeatureDisplayUM, dconfig.FeatureDisplayDesc
         , dconfig.FeatureDisplayStr
         , @QtyUnitFormat , @PlacesQtyUnit
      FROM @Features as dconfig
   END
   CLOSE featCrs
   DEALLOCATE featCrs
END
--Kit Component functionality------
IF OBJECT_ID('tempdb..#Comp_Matl') IS NULL  
   Begin  
      SELECT   
         @KitItem             AS Item,  
         @Component           AS Component,  
         @CompDesc            AS Comp_Description,  
         @CompQtyRequired     AS Qty_Required,  
         @CompUM              AS u_m  
      INTO #Comp_Matl  --Temporary table for Phantom Item  
   End  

TRUNCATE Table #Comp_Matl  -- Delete data from Temporary table  

DECLARE KitComponentCrs CURSOR LOCAL static FOR
SELECT
     pack_num
   , pack_date
   , whse
   , co_num
   , cust_num
   , weight
   , qty_packages
   , ship_code
   , ship_code_desc
   , drop_num
   , drop_seq
   , cast_drop_seq
   , office_addr
   , office_contact
   , office_phone
   , ship_contact
   , ship_addr
   , bill_contact
   , bill_addr
   , contact
   , lcr_num
   , credit_hold
   , cust_po
   , co_line
   , co_release
   , cast_co_release
   , item
   , item_desc
   , item_overview
   , u_m
   , qty_ordered
   , qty_packed
   , qty_ordered_conv
   , qty_packed_conv
   , cust_item
   , feat_str
   , co_note_flag
   , co_rowpointer
   , coitem_note_flag
   , coitem_rowpointer
   , co_bln_note_flag
   , co_bln_rowpointer
   , Print_Kit_Components
FROM @ReportSet   
WHERE Print_Kit_Components = 1

OPEN KitComponentCrs
WHILE 1 = 1
BEGIN
   FETCH KitComponentCrs INTO
     @PackNum
   , @PackDate
   , @Whse
   , @CoNum
   , @CustNum
   , @Weight
   , @QtyPackages
   , @ShipCode
   , @ShipcodeDescription
   , @DropNum
   , @DropSeq
   , @CastDropSeq
   , @OfficeAddr
   , @OfficeContact
   , @OfficePhone
   , @ShipToContact
   , @ShipAddr
   , @BillToContact
   , @BillAddr
   , @CoContact
   , @CoLcrNum
   , @TCreditHold
   , @CoCustPo
   , @CoLine
   , @CoRelease
   , @CastCoRelease
   , @Item
   , @ItemDescription
   , @ItemOverview
   , @UM
   , @QtyOrdered
   , @QtyPacked
   , @QtyOrderedConv
   , @QtyPackedConv
   , @CoitemCustItem
   , @CoitemFeatStr
   , @CoNoteFlag
   , @CoRowPointer
   , @CoitemNoteFlag
   , @CoitemRowPointer
   , @CoBlnNoteFlag
   , @CoBlnRowPointer
   , @CoItemPrintKitComps

   IF @@FETCH_STATUS = -1
      BREAK
   EXEC dbo.GetKitItemBOMSP @Item,@Item,@QtyPacked,1   --Fetching Kit components
   INSERT INTO @ReportSet (
        pack_num
      , pack_date
      , whse
      , co_num
      , cust_num
      , weight
      , qty_packages
      , ship_code
      , ship_code_desc
      , drop_num
      , drop_seq
      , cast_drop_seq
      , office_addr
      , office_contact
      , office_phone
      , ship_contact
      , ship_addr
      , bill_contact
      , bill_addr
      , contact
      , lcr_num
      , credit_hold
      , cust_po
      , co_line
      , co_release
      , cast_co_release
      , item
      , item_desc
      , item_overview
      , serial_num
      , u_m
      , qty_ordered
      , qty_packed
      , qty_ordered_conv
      , qty_packed_conv
      , cust_item
      , feat_str
      , co_note_flag
      , co_rowpointer
      , coitem_note_flag
      , coitem_rowpointer
      , co_bln_note_flag
      , co_bln_rowpointer
      , Print_Kit_Components
      , Kit_Component
      , Kit_Component_Desc
      , Kit_Qty_Required
      , Kit_u_m
      , Kit_Flag
      , qty_unit_format
      , places_qty_unit 
      )
   SELECT
        @PackNum
      , @PackDate
      , @Whse
      , @CoNum
      , @CustNum
      , @Weight
      , @QtyPackages
      , @ShipCode
      , @ShipcodeDescription
      , @DropNum
      , @DropSeq
      , @CastDropSeq
      , @OfficeAddr
      , @OfficeContact
      , @OfficePhone
      , @ShipToContact
      , @ShipAddr
      , @BillToContact
      , @BillAddr
      , @CoContact
      , @CoLcrNum
      , @TCreditHold
      , @CoCustPo
      , @CoLine
      , @CoRelease
      , @CastCoRelease
      , @Item
      , @ItemDescription
      , @ItemOverview
      , NULL
      , @UM
      , @QtyOrdered
      , @QtyPacked
      , @QtyOrderedConv
      , @QtyPackedConv
      , @CoitemCustItem
      , @CoitemFeatStr
      , @CoNoteFlag
      , @CoRowPointer
      , @CoitemNoteFlag
      , @CoitemRowPointer
      , @CoBlnNoteFlag
      , @CoBlnRowPointer
      , 0
      , Component
      , Comp_Description
      , Qty_Required
      , U_M
      , 0
      , @QtyUnitFormat 
      , @PlacesQtyUnit
   FROM #Comp_Matl
   TRUNCATE TABLE #Comp_Matl
END     
CLOSE KitComponentCrs
DEALLOCATE KitComponentCrs

SELECT
  pack_num
, pack_date
, whse
, co_num
, cust_num
, weight
, qty_packages
, ship_code
, ship_code_desc
, drop_num
, drop_seq
, cast_drop_seq
, office_addr
, office_contact
, office_phone
, ship_contact
, ship_addr
, bill_contact
, bill_addr
, contact
, lcr_num
, credit_hold
, cust_po
, co_line
, co_release
, cast_co_release
, item
, item_desc
, item_overview
, serial_num
, u_m
, qty_ordered
, qty_packed
, qty_ordered_conv
, qty_packed_conv
, cust_item
, feat_str
, co_note_flag
, co_rowpointer
, coitem_note_flag
, coitem_rowpointer
, co_bln_note_flag
, co_bln_rowpointer
, JobrouteJob
, JobrouteSuffix
, JobrouteOperNum
, FeatureDisplayQty
, FeatureDisplayUM
, FeatureDisplayDesc
, FeatureDisplayStr
, Print_Kit_Components
, Kit_Component
, Kit_Component_Desc
, Kit_Qty_Required
, Kit_u_m
, Kit_Flag
, qty_unit_format
, places_qty_unit
FROM @ReportSet
ORDER BY pack_num, co_num ASC, co_line ASC, co_release,Kit_Flag ASC,serial_num

COMMIT TRANSACTION
EXEC dbo.CloseSessionContextSp @SessionID = @RptSessionID
GO


